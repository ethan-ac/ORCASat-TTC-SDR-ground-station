id: pduencode_add_length
label: Add Length
category: '[pduencode]'

templates:
  imports: import pduencode
  make: pduencode.add_length(${crc16_present})


#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as \$keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
parameters:
- id: crc16_present
  label: CRC16 included in length field
  dtype: bool
  default: True
  options: ['True', 'False']


#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)
inputs:
-   domain: message
    id: in
outputs:
-   domain: message
    id: out


# summary of this blocks purpose that will appear in the documentation tab of its properties
documentation: |-
    This block calculates the length of the inputted pdu and then inserts that value to the head of the inputted pdu.

#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
